{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/typescript-optional/dist/lib/index.js","webpack:///./src/index.ts","webpack:///./src/Pair.ts","webpack:///./src/lists/Dictionary.ts","webpack:///./src/Either.ts","webpack:///./src/Lazy.ts","webpack:///./src/lists/LinkedList.ts","webpack:///./src/lists/Set.ts","webpack:///./src/commands/CommandHandlerMap.ts","webpack:///./src/commands/Dispatcher.ts","webpack:///./src/commands/CommandHandler.ts","webpack:///./src/commands/AggregateRoot.ts","webpack:///./src/commands/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","extendStatics","__extends","this","setPrototypeOf","__proto__","Array","b","__","constructor","Optional","isPresent","configurable","of","PresentOptional","TypeError","ofNonNull","ofNullable","nullable","EmptyOptional","empty","from","option","kind","default","_super","_this","payload","ifPresent","consumer","ifPresentOrElse","emptyAction","filter","predicate","map","mapper","flatMap","or","supplier","orElse","another","orElseGet","orElseThrow","exception","orNull","orUndefined","toOption","matches","cases","present","__webpack_exports__","_Either__WEBPACK_IMPORTED_MODULE_0__","_Lazy__WEBPACK_IMPORTED_MODULE_1__","_Pair__WEBPACK_IMPORTED_MODULE_2__","_Types__WEBPACK_IMPORTED_MODULE_3__","__WEBPACK_IMPORT_KEY__","indexOf","_lists_LinkedList__WEBPACK_IMPORTED_MODULE_4__","_lists_Dictionary__WEBPACK_IMPORTED_MODULE_5__","_lists_Set__WEBPACK_IMPORTED_MODULE_6__","_commands_index__WEBPACK_IMPORTED_MODULE_7__","Pair","first","second","_classCallCheck","_defineProperty","Dictionary","pair","bucket","generateKey","stringKey","result","iterate","_","push","keys","length","size","accept","propertyName","toString","Either","left","right","isLeft","isRight","f","Right","e","Left","Lazy","LinkedList","next","head","tail","node","forgeNode","previous","isEmpty","appendToTheEndOfTheList","deleted","deleteFromHead","current","EMPTY_NODE","compare","values","forEach","v","append","listSize","regeneratorRuntime","mark","items","wrap","_context","prev","stop","Set","dictionary","add","clear","item","contains","remove","containsKey","a","setB","CommandHandlerMap","command","handlers","_len","arguments","params","_key","h","Dispatcher","Dispatcher_classCallCheck","Dispatcher_defineProperty","_ref","_callee","handler","Promise","reject","concat","abrupt","sent","_x","apply","CommandHandler","CommandHandler_classCallCheck","CommandHandler_defineProperty","AggregateRoot","AggregateRoot_classCallCheck","AggregateRoot_defineProperty","when","w","CommandHandlerMap_CommandHandlerMap","Dispatcher_Dispatcher","CommandHandler_CommandHandler","AggregateRoot_AggregateRoot"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Optional = (function () {\r\n    function Optional() {\r\n    }\r\n    Object.defineProperty(Optional.prototype, \"isEmpty\", {\r\n        get: function () {\r\n            return !this.isPresent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Optional.of = function (value) {\r\n        if (value !== null && value !== undefined)\r\n            return new PresentOptional(value);\r\n        else\r\n            throw new TypeError(\"The passed value was null or undefined.\");\r\n    };\r\n    Optional.ofNonNull = function (value) {\r\n        return Optional.of(value);\r\n    };\r\n    Optional.ofNullable = function (nullable) {\r\n        if (nullable !== null && nullable !== undefined)\r\n            return new PresentOptional(nullable);\r\n        else\r\n            return new EmptyOptional();\r\n    };\r\n    Optional.empty = function () {\r\n        return new EmptyOptional();\r\n    };\r\n    Optional.from = function (option) {\r\n        switch (option.kind) {\r\n            case \"present\": return Optional.of(option.value);\r\n            case \"empty\": return Optional.empty();\r\n            default: throw new TypeError(\"The passed value was not an Option type.\");\r\n        }\r\n    };\r\n    return Optional;\r\n}());\r\nexports.default = Optional;\r\nvar PresentOptional = (function (_super) {\r\n    __extends(PresentOptional, _super);\r\n    function PresentOptional(value) {\r\n        var _this = _super.call(this) || this;\r\n        _this.payload = value;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PresentOptional.prototype, \"isPresent\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PresentOptional.prototype.get = function () {\r\n        return this.payload;\r\n    };\r\n    PresentOptional.prototype.ifPresent = function (consumer) {\r\n        consumer(this.payload);\r\n    };\r\n    PresentOptional.prototype.ifPresentOrElse = function (consumer, emptyAction) {\r\n        consumer(this.payload);\r\n    };\r\n    PresentOptional.prototype.filter = function (predicate) {\r\n        return (predicate(this.payload)) ? this : Optional.empty();\r\n    };\r\n    PresentOptional.prototype.map = function (mapper) {\r\n        return Optional.ofNullable(mapper(this.payload));\r\n    };\r\n    PresentOptional.prototype.flatMap = function (mapper) {\r\n        return mapper(this.payload);\r\n    };\r\n    PresentOptional.prototype.or = function (supplier) {\r\n        return this;\r\n    };\r\n    PresentOptional.prototype.orElse = function (another) {\r\n        return this.payload;\r\n    };\r\n    PresentOptional.prototype.orElseGet = function (another) {\r\n        return this.payload;\r\n    };\r\n    PresentOptional.prototype.orElseThrow = function (exception) {\r\n        return this.payload;\r\n    };\r\n    PresentOptional.prototype.orNull = function () {\r\n        return this.payload;\r\n    };\r\n    PresentOptional.prototype.orUndefined = function () {\r\n        return this.payload;\r\n    };\r\n    PresentOptional.prototype.toOption = function () {\r\n        return { kind: \"present\", value: this.payload };\r\n    };\r\n    PresentOptional.prototype.matches = function (cases) {\r\n        return cases.present(this.payload);\r\n    };\r\n    return PresentOptional;\r\n}(Optional));\r\nvar EmptyOptional = (function (_super) {\r\n    __extends(EmptyOptional, _super);\r\n    function EmptyOptional() {\r\n        return _super.call(this) || this;\r\n    }\r\n    Object.defineProperty(EmptyOptional.prototype, \"isPresent\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EmptyOptional.prototype.get = function () {\r\n        throw new TypeError(\"The optional is not present.\");\r\n    };\r\n    EmptyOptional.prototype.ifPresent = function (consumer) {\r\n    };\r\n    EmptyOptional.prototype.ifPresentOrElse = function (consumer, emptyAction) {\r\n        emptyAction();\r\n    };\r\n    EmptyOptional.prototype.filter = function (predicate) {\r\n        return this;\r\n    };\r\n    EmptyOptional.prototype.map = function (mapper) {\r\n        return Optional.empty();\r\n    };\r\n    EmptyOptional.prototype.flatMap = function (mapper) {\r\n        return Optional.empty();\r\n    };\r\n    EmptyOptional.prototype.or = function (supplier) {\r\n        return supplier();\r\n    };\r\n    EmptyOptional.prototype.orElse = function (another) {\r\n        return another;\r\n    };\r\n    EmptyOptional.prototype.orElseGet = function (another) {\r\n        return this.orElse(another());\r\n    };\r\n    EmptyOptional.prototype.orElseThrow = function (exception) {\r\n        throw exception();\r\n    };\r\n    EmptyOptional.prototype.orNull = function () {\r\n        return null;\r\n    };\r\n    EmptyOptional.prototype.orUndefined = function () {\r\n        return undefined;\r\n    };\r\n    EmptyOptional.prototype.toOption = function () {\r\n        return { kind: \"empty\" };\r\n    };\r\n    EmptyOptional.prototype.matches = function (cases) {\r\n        return cases.empty();\r\n    };\r\n    return EmptyOptional;\r\n}(Optional));\r\n//# sourceMappingURL=index.js.map","export * from './Either';\nexport * from './Lazy';\nexport * from './Pair';\nexport * from './Types';\nexport * from './lists/LinkedList';\nexport * from './lists/Dictionary';\nexport * from './lists/Set';\nexport * from './commands/index';\n","export class Pair<F, S> {\r\n    public static of = <F, S>(first: F, second: S): Pair<F, S> => {\r\n        return new Pair<F, S>(first, second);\r\n    };\r\n\r\n    public readonly first: F;\r\n    public readonly second: S;\r\n\r\n    constructor(first: F, second: S) {\r\n        this.first = first;\r\n        this.second = second;\r\n    }\r\n}\r\n","import { IIterable, Consumer } from '../Types';\r\n\r\nexport interface IPair<K, V> {\r\n    key: K;\r\n    value: V;\r\n}\r\n\r\nexport class Dictionary<K, V> implements IIterable<IPair<K, V>> {\r\n    private bucket: { [key: string]: IPair<K, V> } = {};\r\n\r\n    public get = (key: K): V | null => {\r\n        if (key == null) {\r\n            return null;\r\n        }\r\n        const pair: IPair<K, V> = this.bucket[this.generateKey(key)];\r\n        if (pair == null) {\r\n            return null;\r\n        }\r\n        return pair.value;\r\n    };\r\n\r\n    public add = (key: K, value: V) => {\r\n        this.bucket[this.generateKey(key)] = {\r\n            key,\r\n            value,\r\n        };\r\n    };\r\n\r\n    public remove = (key: K): boolean => {\r\n        const stringKey = this.generateKey(key);\r\n        if (this.bucket.hasOwnProperty(stringKey)) {\r\n            delete this.bucket[stringKey];\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public values = (): V[] => {\r\n        const result: V[] = [];\r\n        this.iterate(_ => result.push(_.value));\r\n        return result;\r\n    };\r\n\r\n    public keys = (): K[] => {\r\n        const result: K[] = [];\r\n        this.iterate(_ => result.push(_.key));\r\n        return result;\r\n    };\r\n\r\n    public containsKey = (key: K): boolean => this.bucket.hasOwnProperty(this.generateKey(key));\r\n\r\n    public clear = () => (this.bucket = {});\r\n\r\n    public size = (): number => Object.keys(this.bucket).length;\r\n\r\n    public isEmpty = (): boolean => this.size() === 0;\r\n\r\n    public iterate = (accept: Consumer<IPair<K, V>>) => {\r\n        for (const propertyName in this.bucket) {\r\n            if (this.bucket.hasOwnProperty(propertyName)) {\r\n                const pair = this.bucket[propertyName];\r\n                accept(pair);\r\n            }\r\n        }\r\n    };\r\n\r\n    private generateKey = (key: K): string => {\r\n        return 'x' + key.toString();\r\n    };\r\n}\r\n","import Optional from 'typescript-optional';\r\nimport { Pair } from './Pair';\r\nimport { Func } from './Types';\r\n\r\nexport class Either<L, R> {\r\n    public static liftWithValue = <T, R>(f: Func<T, R>): Func<T, Either<Pair<Error, T>, R>> => {\r\n        return (t: T) => {\r\n            try {\r\n                return Either.Right(f(t));\r\n            } catch (e) {\r\n                return Either.Left(Pair.of(e, t));\r\n            }\r\n        };\r\n    };\r\n\r\n    public static Left = <L, R>(value: L): Either<L, R> => {\r\n        return new Either(value, null);\r\n    };\r\n\r\n    public static Right = <L, R>(value: R): Either<L, R> => {\r\n        return new Either(null, value);\r\n    };\r\n\r\n    private readonly left: L;\r\n    private readonly right: R;\r\n\r\n    private constructor(left: L, right: R) {\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n\r\n    public getLeft = (): Optional<L> => Optional.ofNullable(this.left);\r\n    public getRight = (): Optional<R> => Optional.ofNullable(this.right);\r\n    public isLeft = (): boolean => this.left !== null;\r\n    public isRight = (): boolean => this.right !== null;\r\n\r\n    public mapLeft = <T>(mapper: Func<L, T>): Optional<T> => {\r\n        if (this.isLeft()) {\r\n            return Optional.of(mapper(this.left));\r\n        }\r\n        return Optional.empty();\r\n    };\r\n\r\n    public mapRight = <T>(mapper: Func<R, T>): Optional<T> => {\r\n        if (this.isRight()) {\r\n            return Optional.of(mapper(this.right));\r\n        }\r\n        return Optional.empty();\r\n    };\r\n}\r\n","import { Supplier } from './Types';\r\n\r\nexport class Lazy<T> {\r\n    public static of = <T>(supplier: Supplier<T>): Lazy<T> => {\r\n        return new Lazy<T>(supplier);\r\n    };\r\n\r\n    private value: T = null;\r\n    private readonly supplier: Supplier<T>;\r\n\r\n    private constructor(supplier: Supplier<T>) {\r\n        this.supplier = supplier;\r\n    }\r\n\r\n    public get = (): T => {\r\n        if (this.value === null) {\r\n            this.value = this.supplier();\r\n        }\r\n        return this.value;\r\n    };\r\n\r\n    public isEvaluated = (): boolean => this.value !== null;\r\n}\r\n","import { IIterable, Consumer, Func } from '../Types';\r\n\r\nexport interface INode<T> {\r\n    value: T;\r\n    next?: INode<T>;\r\n    previous?: INode<T>;\r\n}\r\n\r\nexport class LinkedList<T> implements IIterable<T> {\r\n    private readonly EMPTY_NODE: INode<T> = { value: null, next: null };\r\n    private head: INode<T> = null;\r\n    private tail: INode<T> = null;\r\n\r\n    public getHead = (): INode<T> => this.head;\r\n    public getTail = (): INode<T> => this.tail;\r\n\r\n    public insert = (value: T): LinkedList<T> => {\r\n        const node = this.forgeNode(value);\r\n\r\n        node.next = this.head;\r\n        if (this.head) {\r\n            this.head.previous = node;\r\n        }\r\n\r\n        this.head = node;\r\n\r\n        if (!this.tail) {\r\n            this.tail = node;\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    public append = (value: T): LinkedList<T> => {\r\n        const node = this.forgeNode(value);\r\n\r\n        if (this.isEmpty()) {\r\n            this.head = node;\r\n            this.tail = node;\r\n            return this;\r\n        }\r\n\r\n        this.appendToTheEndOfTheList(node);\r\n        return this;\r\n    };\r\n\r\n    public delete = (value: T): boolean => {\r\n        let deleted: boolean = false;\r\n        if (this.isEmpty()) {\r\n            return deleted;\r\n        }\r\n\r\n        deleted = this.deleteFromHead(value);\r\n\r\n        let current = this.head || this.EMPTY_NODE;\r\n        while (current.next) {\r\n            if (current.next.value === value) {\r\n                deleted = true;\r\n                if (current.next.next && current.next.next.previous) {\r\n                    current.next.next.previous = current;\r\n                }\r\n                current.next = current.next.next;\r\n            } else {\r\n                current = current.next;\r\n            }\r\n        }\r\n\r\n        if (this.tail.value === value) {\r\n            this.tail = current;\r\n        }\r\n        return deleted;\r\n    };\r\n\r\n    public find = (compare: Func<T, boolean>): INode<T> => {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n\r\n        let node = this.head;\r\n        while (node) {\r\n            if (compare(node.value)) {\r\n                return node;\r\n            }\r\n            node = node.next;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    public fromArray = (values: T[]): LinkedList<T> => {\r\n        values.forEach(v => this.append(v));\r\n        return this;\r\n    };\r\n\r\n    public toArray = (): T[] => {\r\n        const result: T[] = [];\r\n        this.iterate(_ => result.push(_));\r\n        return result;\r\n    };\r\n\r\n    public size = (): number => {\r\n        let listSize = 0;\r\n        this.iterate(_ => listSize++);\r\n        return listSize;\r\n    };\r\n\r\n    public isEmpty = () => !this.head;\r\n\r\n    public *items() {\r\n        let node = this.head;\r\n        while (node) {\r\n            yield node;\r\n            node = node.next;\r\n        }\r\n    }\r\n\r\n    public iterate = (accept: Consumer<T>) => {\r\n        let node = this.head;\r\n        while (node) {\r\n            accept(node.value);\r\n            node = node.next;\r\n        }\r\n    };\r\n\r\n    private deleteFromHead = (value: T): boolean => {\r\n        let deleted: boolean = false;\r\n        while (this.head && this.head.value === value) {\r\n            deleted = true;\r\n            this.head = this.head.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n        }\r\n        return deleted;\r\n    };\r\n\r\n    private forgeNode = (value: T): INode<T> => {\r\n        return { value, next: null };\r\n    };\r\n\r\n    private appendToTheEndOfTheList = (node: INode<T>) => {\r\n        node.previous = this.tail;\r\n        this.tail.next = node;\r\n        this.tail = node;\r\n    };\r\n}\r\n","import { Dictionary } from './Dictionary';\r\nimport { IIterable, Consumer } from '../Types';\r\n\r\nexport class Set<T> implements IIterable<T> {\r\n    private dictionary: Dictionary<T, {}> = new Dictionary();\r\n\r\n    public size = () => this.dictionary.size();\r\n\r\n    public toArray = (): T[] => this.dictionary.keys();\r\n\r\n    public fromArray = (items: T[]) => items.forEach(i => this.add(i));\r\n\r\n    public isEmpty = () => this.dictionary.isEmpty();\r\n\r\n    public clear = () => this.dictionary.clear();\r\n\r\n    public add = (item: T): boolean => {\r\n        if (this.contains(item)) {\r\n            return false;\r\n        }\r\n        this.dictionary.add(item, {});\r\n    };\r\n\r\n    public remove = (item: T): boolean => this.dictionary.remove(item);\r\n\r\n    public contains = (item: T) => this.dictionary.containsKey(item);\r\n\r\n    public iterate = (accept: Consumer<T>) => {\r\n        this.dictionary.iterate(a => {\r\n            accept(a.key);\r\n        });\r\n    };\r\n\r\n    /***\r\n     * Removes item from this set if set B doesn't contain item\r\n     * @param setB set B\r\n     */\r\n    public intersection = (setB: Set<T>) => {\r\n        this.iterate(item => {\r\n            if (!setB.contains(item)) {\r\n                this.remove(item);\r\n            }\r\n        });\r\n    };\r\n\r\n    /***\r\n     * Add items to this set from set B\r\n     * @param setB\r\n     */\r\n    public union = (setB: Set<T>) => {\r\n        setB.iterate(item => {\r\n            this.add(item);\r\n        });\r\n    };\r\n\r\n    /***\r\n     * Remove items from this set that are present in set B\r\n     * @param setB\r\n     */\r\n    public difference = (setB: Set<T>) => {\r\n        setB.iterate(item => {\r\n            this.remove(item);\r\n        });\r\n    };\r\n\r\n    /***\r\n     * Is this set sub set of set B\r\n     * @param setB\r\n     */\r\n    public isSubsetOf = (setB: Set<T>): boolean => {\r\n        if (this.size() > setB.size()) {\r\n            return false;\r\n        }\r\n\r\n        this.iterate(item => {\r\n            if (!setB.contains(item)) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return true;\r\n    };\r\n}\r\n","import { Dictionary, Func } from '..';\r\nimport { CommandHandler } from './CommandHandler';\r\n\r\nexport class CommandHandlerMap {\r\n    private handlers: Dictionary<string, Func<object, Promise<any>>> = new Dictionary();\r\n\r\n    constructor(...params: CommandHandler[]) {\r\n        params.forEach(h => h.handlers.iterate(i => this.handlers.add(i.key, i.value)));\r\n    }\r\n\r\n    public get = <T extends object, R>(command: T): Func<T, Promise<R>> =>\r\n        this.handlers.get(command.constructor.name);\r\n}\r\n","import { CommandHandlerMap } from './CommandHandlerMap';\r\nimport Optional from 'typescript-optional';\r\n\r\nexport class Dispatcher {\r\n    private readonly map: CommandHandlerMap;\r\n\r\n    constructor(map: CommandHandlerMap) {\r\n        this.map = map;\r\n    }\r\n\r\n    public dispatch = async <T extends object, R>(command: T): Promise<R> => {\r\n        const handler = Optional.ofNullable(this.map.get<T, R>(command)).orElse(() =>\r\n            Promise.reject(`${command.constructor.name} no handler defined`),\r\n        );\r\n        return await handler(command);\r\n    };\r\n}\r\n","import { Dictionary, Func } from '..';\r\n\r\nexport class CommandHandler {\r\n    public readonly handlers: Dictionary<string, Func<object, Promise<any>>> = new Dictionary();\r\n\r\n    protected register = <T extends object, R>(c: new () => T, handler: Func<T, Promise<R>>) => {\r\n        this.handlers.add(c.name, h => handler(h as T));\r\n    };\r\n}\r\n","import { Consumer } from '../Types';\r\nimport { Dictionary } from '..';\r\n\r\nexport class AggregateRoot {\r\n    public readonly handlers: Dictionary<string, Consumer<object>> = new Dictionary();\r\n\r\n    protected register = <T extends object>(c: new () => T, when: Consumer<T>) => {\r\n        this.handlers.add(c.name, w => when(w as T));\r\n    };\r\n\r\n    protected raise = (item: object) => {\r\n        const consumer = this.handlers.get(item.constructor.name);\r\n        if (consumer) {\r\n            consumer(item);\r\n        }\r\n    };\r\n}\r\n","export * from './CommandHandlerMap';\r\nexport * from './Dispatcher';\r\nexport * from './CommandHandler';\r\nexport * from './AggregateRoot';\r\n"],"sourceRoot":""}